// ./js/models/action.js
// The model for an action

// Generated by Copilot
class Action {
    /**
     * Create a new action
     * @param {string} id - Unique identifier for the action
     * @param {string} name - Display name for the action
     * @param {string} description - Description of the action
     * @param {int} baseDuration - how long the action takes in milliseconds
     * @param {boolean} isRestAction - whether this is a rest action or not
     * @param {boolean} unlocked - is this action unlocked
     * @param {Object} statCosts - what if any stat costs there are
     * @param {Object} currencyCosts - what if any currency costs there are
     * @param {Object} currencyRewards - what currencies are rewarded if any
     * @param {Object} statRewards - what stats are rewarded if any
     * @param {Object} skillExperience - what skills gain experience if any
     * @param {string} requiredClass - if there is a required class
     * @param {Object} requiredSkills - if any required 
     * @param {int} completionCount - how many times the action has been completed
     * @param {int} totalTimeSpent - how much total time has been spent on the action
     * @param {int} currentProgress - the current progress towards completion (out of 100)
     * @param {int} lastActionStartTime - the last time this action was started
     */
    constructor(
        id, 
        name, 
        description, 
        baseDuration = 0, 
        isRestAction = false, 
        unlocked = false, 
        statCosts = {}, 
        currencyCosts = {}, 
        currencyRewards = {}, 
        statRewards = {}, 
        skillExperience = {}, 
        requiredClass = null, 
        requiredSkills = {}, 
        completionCount = 0, 
        totalTimeSpent = 0, 
        currentProgress = 0, 
        lastActionStartTime = null
    ) {
        this.id = id;
        this.name = name;
        this.description = description;
        this.baseDuration = baseDuration;
        this.isRestAction = isRestAction;
        this.unlocked = unlocked;
        this.statCosts = statCosts;
        this.currencyCosts = currencyCosts;
        this.currencyRewards = currencyRewards;
        this.statRewards = statRewards;
        this.skillExperience = skillExperience;
        this.requiredClass = requiredClass;
        this.requiredSkills = requiredSkills;
        this.completionCount = completionCount;
        this.totalTimeSpent = totalTimeSpent;
        this.currentProgress = currentProgress;
        this.lastActionStartTime = lastActionStartTime;
    }
}